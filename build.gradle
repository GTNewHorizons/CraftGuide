Properties ver = new Properties()
File versionFile = new File('version.txt')

// build is to distinguish bugfix releases, as the fourth number in the mod version. Resets when any of the others increase.
ver.build = 0

// revision is used by liteloader, and is required to increase (by an arbitrary amount) with each public release
ver.revision = 0

// with the default values set above, now try reading the actual values
ver.load(versionFile.newDataInputStream())

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'liteloader'
apply plugin: 'curseforge'

String minecraft_versions = '1.7.10'
version = '1.7.1.' + ver.build
group = 'uristqwerty' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'CraftGuide'

ext.llrevision = '03'

minecraft {
    version = '1.7.10-10.13.4.1492-1.7.10'
    runDir = 'run'

    replaceIn 'CraftGuide_FML.java'
    replaceIn 'LiteMod_CraftGuide.java'
    replace '@MOD_VERSION@', project.version
}

repositories {
    maven {
        name = 'Player\'s Repo'
        url = 'http://maven.ic2.player.to/'
    }
}

dependencies {
    compile 'com.mod-buildcraft:buildcraft:6.0.17:dev'
    compile 'net.industrial-craft:industrialcraft-2:2.2.760-experimental:dev'
}

task themeZip(type: Zip) {
    from 'themes'
    archiveName 'CraftGuideResources.zip'
    destinationDir sourceSets.main.output.resourcesDir
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    inputs.property 'revision', ver.revision

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'litemod.json'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'llrevision':project.llrevision, 'revision':ver.revision
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'litemod.json'
    }
}

processResources.dependsOn themeZip

jar {
    exclude '**/LiteMod_CraftGuide.*'
    exclude 'litemod.json'
}

jarLiteloader {
    exclude '**/CraftGuide_FML.*'
    exclude 'mcmod.info'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

task apiJar(type: Jar) {
    from (sourceSets.main.output) {
        include 'uristqwerty/CraftGuide/api/**'
    }
    from (sourceSets.main.allJava) {
        include 'uristqwerty/CraftGuide/api/**'
    }
    classifier = 'api'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task publish(type: Exec) {
    commandLine 'cmd', '/c', 'publish.bat', project.version, minecraft_versions
}

curse {
    projectId = '75557'
    apiKey = project.curseForgeApiKey
    releaseType = 'alpha' //alpha|beta|release

    addGameVersion minecraft_versions
    additionalArtifact deobfJar, apiJar, sourcesJar

    changelog '''\
API:
 - Final API refinements. Hopefully, this can support all future needs for
   MC 1.7.10.
'''

}

publish.dependsOn build
curse.dependsOn publish

artifacts {
    archives deobfJar
    archives apiJar
    archives sourcesJar
}

build.doLast {
    ver.build = "" + ((ver.build as int) + 1)
    ver.revision = "" + ((ver.revision as int) + 1)
    ver.store(versionFile.newWriter(), null)
}
